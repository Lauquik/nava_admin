// source: actions.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var commons_pb = require('./commons_pb.js');
goog.object.extend(proto, commons_pb);
goog.exportSymbol('proto.social.CommentFetchRequest', null, global);
goog.exportSymbol('proto.social.CommentProto', null, global);
goog.exportSymbol('proto.social.CommentRequest', null, global);
goog.exportSymbol('proto.social.CommentsFetchResponse', null, global);
goog.exportSymbol('proto.social.EntityTypes', null, global);
goog.exportSymbol('proto.social.IdRequest', null, global);
goog.exportSymbol('proto.social.ReactRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.ReactRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.social.ReactRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.ReactRequest.displayName = 'proto.social.ReactRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.IdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.social.IdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.IdRequest.displayName = 'proto.social.IdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.CommentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.social.CommentRequest.repeatedFields_, null);
};
goog.inherits(proto.social.CommentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.CommentRequest.displayName = 'proto.social.CommentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.CommentProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.social.CommentProto.repeatedFields_, null);
};
goog.inherits(proto.social.CommentProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.CommentProto.displayName = 'proto.social.CommentProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.CommentFetchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.social.CommentFetchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.CommentFetchRequest.displayName = 'proto.social.CommentFetchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.social.CommentsFetchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.social.CommentsFetchResponse.repeatedFields_, null);
};
goog.inherits(proto.social.CommentsFetchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.social.CommentsFetchResponse.displayName = 'proto.social.CommentsFetchResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.ReactRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.social.ReactRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.ReactRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.ReactRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reaction: jspb.Message.getFieldWithDefault(msg, 2, ""),
    reactionon: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.ReactRequest}
 */
proto.social.ReactRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.ReactRequest;
  return proto.social.ReactRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.ReactRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.ReactRequest}
 */
proto.social.ReactRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReaction(value);
      break;
    case 3:
      var value = /** @type {!proto.social.EntityTypes} */ (reader.readEnum());
      msg.setReactionon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.ReactRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.ReactRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.ReactRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.ReactRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReaction();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReactionon();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string entityId = 1;
 * @return {string}
 */
proto.social.ReactRequest.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.ReactRequest} returns this
 */
proto.social.ReactRequest.prototype.setEntityid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string reaction = 2;
 * @return {string}
 */
proto.social.ReactRequest.prototype.getReaction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.ReactRequest} returns this
 */
proto.social.ReactRequest.prototype.setReaction = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional EntityTypes reactionOn = 3;
 * @return {!proto.social.EntityTypes}
 */
proto.social.ReactRequest.prototype.getReactionon = function() {
  return /** @type {!proto.social.EntityTypes} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.social.EntityTypes} value
 * @return {!proto.social.ReactRequest} returns this
 */
proto.social.ReactRequest.prototype.setReactionon = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.IdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.social.IdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.IdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.IdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.IdRequest}
 */
proto.social.IdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.IdRequest;
  return proto.social.IdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.IdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.IdRequest}
 */
proto.social.IdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.IdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.IdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.IdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.IdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.social.IdRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.IdRequest} returns this
 */
proto.social.IdRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.social.CommentRequest.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.CommentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.social.CommentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.CommentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.CommentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parentid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    content: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commenton: jspb.Message.getFieldWithDefault(msg, 3, 0),
    mediaurlsList: jspb.Message.toObjectList(msg.getMediaurlsList(),
    commons_pb.MediaUrl.toObject, includeInstance),
    webpreviewsList: jspb.Message.toObjectList(msg.getWebpreviewsList(),
    commons_pb.WebPreview.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.CommentRequest}
 */
proto.social.CommentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.CommentRequest;
  return proto.social.CommentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.CommentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.CommentRequest}
 */
proto.social.CommentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 3:
      var value = /** @type {!proto.social.EntityTypes} */ (reader.readEnum());
      msg.setCommenton(value);
      break;
    case 4:
      var value = new commons_pb.MediaUrl;
      reader.readMessage(value,commons_pb.MediaUrl.deserializeBinaryFromReader);
      msg.addMediaurls(value);
      break;
    case 5:
      var value = new commons_pb.WebPreview;
      reader.readMessage(value,commons_pb.WebPreview.deserializeBinaryFromReader);
      msg.addWebpreviews(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.CommentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.CommentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.CommentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.CommentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParentid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommenton();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getMediaurlsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      commons_pb.MediaUrl.serializeBinaryToWriter
    );
  }
  f = message.getWebpreviewsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      commons_pb.WebPreview.serializeBinaryToWriter
    );
  }
};


/**
 * optional string parentId = 1;
 * @return {string}
 */
proto.social.CommentRequest.prototype.getParentid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.CommentRequest} returns this
 */
proto.social.CommentRequest.prototype.setParentid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string content = 2;
 * @return {string}
 */
proto.social.CommentRequest.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.CommentRequest} returns this
 */
proto.social.CommentRequest.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional EntityTypes commentOn = 3;
 * @return {!proto.social.EntityTypes}
 */
proto.social.CommentRequest.prototype.getCommenton = function() {
  return /** @type {!proto.social.EntityTypes} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.social.EntityTypes} value
 * @return {!proto.social.CommentRequest} returns this
 */
proto.social.CommentRequest.prototype.setCommenton = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * repeated MediaUrl mediaUrls = 4;
 * @return {!Array<!proto.social.MediaUrl>}
 */
proto.social.CommentRequest.prototype.getMediaurlsList = function() {
  return /** @type{!Array<!proto.social.MediaUrl>} */ (
    jspb.Message.getRepeatedWrapperField(this, commons_pb.MediaUrl, 4));
};


/**
 * @param {!Array<!proto.social.MediaUrl>} value
 * @return {!proto.social.CommentRequest} returns this
*/
proto.social.CommentRequest.prototype.setMediaurlsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.social.MediaUrl=} opt_value
 * @param {number=} opt_index
 * @return {!proto.social.MediaUrl}
 */
proto.social.CommentRequest.prototype.addMediaurls = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.social.MediaUrl, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.social.CommentRequest} returns this
 */
proto.social.CommentRequest.prototype.clearMediaurlsList = function() {
  return this.setMediaurlsList([]);
};


/**
 * repeated WebPreview webPreviews = 5;
 * @return {!Array<!proto.social.WebPreview>}
 */
proto.social.CommentRequest.prototype.getWebpreviewsList = function() {
  return /** @type{!Array<!proto.social.WebPreview>} */ (
    jspb.Message.getRepeatedWrapperField(this, commons_pb.WebPreview, 5));
};


/**
 * @param {!Array<!proto.social.WebPreview>} value
 * @return {!proto.social.CommentRequest} returns this
*/
proto.social.CommentRequest.prototype.setWebpreviewsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.social.WebPreview=} opt_value
 * @param {number=} opt_index
 * @return {!proto.social.WebPreview}
 */
proto.social.CommentRequest.prototype.addWebpreviews = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.social.WebPreview, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.social.CommentRequest} returns this
 */
proto.social.CommentRequest.prototype.clearWebpreviewsList = function() {
  return this.setWebpreviewsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.social.CommentProto.repeatedFields_ = [7,8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.CommentProto.prototype.toObject = function(opt_includeInstance) {
  return proto.social.CommentProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.CommentProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.CommentProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    commentid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    content: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    createdon: jspb.Message.getFieldWithDefault(msg, 4, 0),
    numreactsMap: (f = msg.getNumreactsMap()) ? f.toObject(includeInstance, undefined) : [],
    numcomments: jspb.Message.getFieldWithDefault(msg, 6, 0),
    userreactionsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    mediaurlsList: jspb.Message.toObjectList(msg.getMediaurlsList(),
    commons_pb.MediaUrl.toObject, includeInstance),
    webpreviewsList: jspb.Message.toObjectList(msg.getWebpreviewsList(),
    commons_pb.WebPreview.toObject, includeInstance),
    parentid: jspb.Message.getFieldWithDefault(msg, 10, ""),
    authorinfo: (f = msg.getAuthorinfo()) && commons_pb.SocialProfile.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.CommentProto}
 */
proto.social.CommentProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.CommentProto;
  return proto.social.CommentProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.CommentProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.CommentProto}
 */
proto.social.CommentProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommentid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedon(value);
      break;
    case 5:
      var value = msg.getNumreactsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, "", 0);
         });
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumcomments(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addUserreactions(value);
      break;
    case 8:
      var value = new commons_pb.MediaUrl;
      reader.readMessage(value,commons_pb.MediaUrl.deserializeBinaryFromReader);
      msg.addMediaurls(value);
      break;
    case 9:
      var value = new commons_pb.WebPreview;
      reader.readMessage(value,commons_pb.WebPreview.deserializeBinaryFromReader);
      msg.addWebpreviews(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentid(value);
      break;
    case 11:
      var value = new commons_pb.SocialProfile;
      reader.readMessage(value,commons_pb.SocialProfile.deserializeBinaryFromReader);
      msg.setAuthorinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.CommentProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.CommentProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.CommentProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.CommentProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommentid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreatedon();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getNumreactsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);
  }
  f = message.getNumcomments();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getUserreactionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getMediaurlsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      commons_pb.MediaUrl.serializeBinaryToWriter
    );
  }
  f = message.getWebpreviewsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      commons_pb.WebPreview.serializeBinaryToWriter
    );
  }
  f = message.getParentid();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getAuthorinfo();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      commons_pb.SocialProfile.serializeBinaryToWriter
    );
  }
};


/**
 * optional string commentId = 1;
 * @return {string}
 */
proto.social.CommentProto.prototype.getCommentid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.CommentProto} returns this
 */
proto.social.CommentProto.prototype.setCommentid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string content = 2;
 * @return {string}
 */
proto.social.CommentProto.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.CommentProto} returns this
 */
proto.social.CommentProto.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string userId = 3;
 * @return {string}
 */
proto.social.CommentProto.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.CommentProto} returns this
 */
proto.social.CommentProto.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 createdOn = 4;
 * @return {number}
 */
proto.social.CommentProto.prototype.getCreatedon = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.social.CommentProto} returns this
 */
proto.social.CommentProto.prototype.setCreatedon = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * map<string, int64> numReacts = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.social.CommentProto.prototype.getNumreactsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.social.CommentProto} returns this
 */
proto.social.CommentProto.prototype.clearNumreactsMap = function() {
  this.getNumreactsMap().clear();
  return this;
};


/**
 * optional int32 numComments = 6;
 * @return {number}
 */
proto.social.CommentProto.prototype.getNumcomments = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.social.CommentProto} returns this
 */
proto.social.CommentProto.prototype.setNumcomments = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated string userReactions = 7;
 * @return {!Array<string>}
 */
proto.social.CommentProto.prototype.getUserreactionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.social.CommentProto} returns this
 */
proto.social.CommentProto.prototype.setUserreactionsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.social.CommentProto} returns this
 */
proto.social.CommentProto.prototype.addUserreactions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.social.CommentProto} returns this
 */
proto.social.CommentProto.prototype.clearUserreactionsList = function() {
  return this.setUserreactionsList([]);
};


/**
 * repeated MediaUrl mediaUrls = 8;
 * @return {!Array<!proto.social.MediaUrl>}
 */
proto.social.CommentProto.prototype.getMediaurlsList = function() {
  return /** @type{!Array<!proto.social.MediaUrl>} */ (
    jspb.Message.getRepeatedWrapperField(this, commons_pb.MediaUrl, 8));
};


/**
 * @param {!Array<!proto.social.MediaUrl>} value
 * @return {!proto.social.CommentProto} returns this
*/
proto.social.CommentProto.prototype.setMediaurlsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.social.MediaUrl=} opt_value
 * @param {number=} opt_index
 * @return {!proto.social.MediaUrl}
 */
proto.social.CommentProto.prototype.addMediaurls = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.social.MediaUrl, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.social.CommentProto} returns this
 */
proto.social.CommentProto.prototype.clearMediaurlsList = function() {
  return this.setMediaurlsList([]);
};


/**
 * repeated WebPreview webPreviews = 9;
 * @return {!Array<!proto.social.WebPreview>}
 */
proto.social.CommentProto.prototype.getWebpreviewsList = function() {
  return /** @type{!Array<!proto.social.WebPreview>} */ (
    jspb.Message.getRepeatedWrapperField(this, commons_pb.WebPreview, 9));
};


/**
 * @param {!Array<!proto.social.WebPreview>} value
 * @return {!proto.social.CommentProto} returns this
*/
proto.social.CommentProto.prototype.setWebpreviewsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.social.WebPreview=} opt_value
 * @param {number=} opt_index
 * @return {!proto.social.WebPreview}
 */
proto.social.CommentProto.prototype.addWebpreviews = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.social.WebPreview, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.social.CommentProto} returns this
 */
proto.social.CommentProto.prototype.clearWebpreviewsList = function() {
  return this.setWebpreviewsList([]);
};


/**
 * optional string parentId = 10;
 * @return {string}
 */
proto.social.CommentProto.prototype.getParentid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.CommentProto} returns this
 */
proto.social.CommentProto.prototype.setParentid = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional SocialProfile authorInfo = 11;
 * @return {?proto.social.SocialProfile}
 */
proto.social.CommentProto.prototype.getAuthorinfo = function() {
  return /** @type{?proto.social.SocialProfile} */ (
    jspb.Message.getWrapperField(this, commons_pb.SocialProfile, 11));
};


/**
 * @param {?proto.social.SocialProfile|undefined} value
 * @return {!proto.social.CommentProto} returns this
*/
proto.social.CommentProto.prototype.setAuthorinfo = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.social.CommentProto} returns this
 */
proto.social.CommentProto.prototype.clearAuthorinfo = function() {
  return this.setAuthorinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.social.CommentProto.prototype.hasAuthorinfo = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.CommentFetchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.social.CommentFetchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.CommentFetchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.CommentFetchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parentid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pagenumber: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pagesize: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.CommentFetchRequest}
 */
proto.social.CommentFetchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.CommentFetchRequest;
  return proto.social.CommentFetchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.CommentFetchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.CommentFetchRequest}
 */
proto.social.CommentFetchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenumber(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.CommentFetchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.CommentFetchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.CommentFetchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.CommentFetchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParentid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPagenumber();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string parentId = 1;
 * @return {string}
 */
proto.social.CommentFetchRequest.prototype.getParentid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.CommentFetchRequest} returns this
 */
proto.social.CommentFetchRequest.prototype.setParentid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userId = 2;
 * @return {string}
 */
proto.social.CommentFetchRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.social.CommentFetchRequest} returns this
 */
proto.social.CommentFetchRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 pageNumber = 3;
 * @return {number}
 */
proto.social.CommentFetchRequest.prototype.getPagenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.social.CommentFetchRequest} returns this
 */
proto.social.CommentFetchRequest.prototype.setPagenumber = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 pageSize = 4;
 * @return {number}
 */
proto.social.CommentFetchRequest.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.social.CommentFetchRequest} returns this
 */
proto.social.CommentFetchRequest.prototype.setPagesize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.social.CommentsFetchResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.social.CommentsFetchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.social.CommentsFetchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.social.CommentsFetchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.CommentsFetchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    commentsList: jspb.Message.toObjectList(msg.getCommentsList(),
    proto.social.CommentProto.toObject, includeInstance),
    pagenumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pagesize: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.social.CommentsFetchResponse}
 */
proto.social.CommentsFetchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.social.CommentsFetchResponse;
  return proto.social.CommentsFetchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.social.CommentsFetchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.social.CommentsFetchResponse}
 */
proto.social.CommentsFetchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.social.CommentProto;
      reader.readMessage(value,proto.social.CommentProto.deserializeBinaryFromReader);
      msg.addComments(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenumber(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.social.CommentsFetchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.social.CommentsFetchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.social.CommentsFetchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.social.CommentsFetchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.social.CommentProto.serializeBinaryToWriter
    );
  }
  f = message.getPagenumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * repeated CommentProto comments = 1;
 * @return {!Array<!proto.social.CommentProto>}
 */
proto.social.CommentsFetchResponse.prototype.getCommentsList = function() {
  return /** @type{!Array<!proto.social.CommentProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.social.CommentProto, 1));
};


/**
 * @param {!Array<!proto.social.CommentProto>} value
 * @return {!proto.social.CommentsFetchResponse} returns this
*/
proto.social.CommentsFetchResponse.prototype.setCommentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.social.CommentProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.social.CommentProto}
 */
proto.social.CommentsFetchResponse.prototype.addComments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.social.CommentProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.social.CommentsFetchResponse} returns this
 */
proto.social.CommentsFetchResponse.prototype.clearCommentsList = function() {
  return this.setCommentsList([]);
};


/**
 * optional int32 pageNumber = 2;
 * @return {number}
 */
proto.social.CommentsFetchResponse.prototype.getPagenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.social.CommentsFetchResponse} returns this
 */
proto.social.CommentsFetchResponse.prototype.setPagenumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 pageSize = 3;
 * @return {number}
 */
proto.social.CommentsFetchResponse.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.social.CommentsFetchResponse} returns this
 */
proto.social.CommentsFetchResponse.prototype.setPagesize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.social.EntityTypes = {
  POST: 0,
  EVENT: 1,
  COMMENT: 2
};

goog.object.extend(exports, proto.social);
