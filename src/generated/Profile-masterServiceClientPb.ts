/**
 * @fileoverview gRPC-Web generated client stub for login
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v4.25.1
// source: profile-master.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as profile$master_pb from './profile-master_pb'; // proto import: "profile-master.proto"


export class ProfileMasterClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetProfileMaster = new grpcWeb.MethodDescriptor(
    '/login.ProfileMaster/GetProfileMaster',
    grpcWeb.MethodType.UNARY,
    profile$master_pb.GetProfileMasterRequest,
    profile$master_pb.ProfileMasterResponse,
    (request: profile$master_pb.GetProfileMasterRequest) => {
      return request.serializeBinary();
    },
    profile$master_pb.ProfileMasterResponse.deserializeBinary
  );

  getProfileMaster(
    request: profile$master_pb.GetProfileMasterRequest,
    metadata?: grpcWeb.Metadata | null): Promise<profile$master_pb.ProfileMasterResponse>;

  getProfileMaster(
    request: profile$master_pb.GetProfileMasterRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: profile$master_pb.ProfileMasterResponse) => void): grpcWeb.ClientReadableStream<profile$master_pb.ProfileMasterResponse>;

  getProfileMaster(
    request: profile$master_pb.GetProfileMasterRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: profile$master_pb.ProfileMasterResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/login.ProfileMaster/GetProfileMaster',
        request,
        metadata || {},
        this.methodDescriptorGetProfileMaster,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/login.ProfileMaster/GetProfileMaster',
    request,
    metadata || {},
    this.methodDescriptorGetProfileMaster);
  }

  methodDescriptorGetLanguages = new grpcWeb.MethodDescriptor(
    '/login.ProfileMaster/GetLanguages',
    grpcWeb.MethodType.UNARY,
    profile$master_pb.GetLanguagesRequest,
    profile$master_pb.LanguagesResponse,
    (request: profile$master_pb.GetLanguagesRequest) => {
      return request.serializeBinary();
    },
    profile$master_pb.LanguagesResponse.deserializeBinary
  );

  getLanguages(
    request: profile$master_pb.GetLanguagesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<profile$master_pb.LanguagesResponse>;

  getLanguages(
    request: profile$master_pb.GetLanguagesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: profile$master_pb.LanguagesResponse) => void): grpcWeb.ClientReadableStream<profile$master_pb.LanguagesResponse>;

  getLanguages(
    request: profile$master_pb.GetLanguagesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: profile$master_pb.LanguagesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/login.ProfileMaster/GetLanguages',
        request,
        metadata || {},
        this.methodDescriptorGetLanguages,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/login.ProfileMaster/GetLanguages',
    request,
    metadata || {},
    this.methodDescriptorGetLanguages);
  }

  methodDescriptorBulkGetProfileMaster = new grpcWeb.MethodDescriptor(
    '/login.ProfileMaster/BulkGetProfileMaster',
    grpcWeb.MethodType.UNARY,
    profile$master_pb.BulkGetProfileMasterRequest,
    profile$master_pb.ProfileMasterResponse,
    (request: profile$master_pb.BulkGetProfileMasterRequest) => {
      return request.serializeBinary();
    },
    profile$master_pb.ProfileMasterResponse.deserializeBinary
  );

  bulkGetProfileMaster(
    request: profile$master_pb.BulkGetProfileMasterRequest,
    metadata?: grpcWeb.Metadata | null): Promise<profile$master_pb.ProfileMasterResponse>;

  bulkGetProfileMaster(
    request: profile$master_pb.BulkGetProfileMasterRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: profile$master_pb.ProfileMasterResponse) => void): grpcWeb.ClientReadableStream<profile$master_pb.ProfileMasterResponse>;

  bulkGetProfileMaster(
    request: profile$master_pb.BulkGetProfileMasterRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: profile$master_pb.ProfileMasterResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/login.ProfileMaster/BulkGetProfileMaster',
        request,
        metadata || {},
        this.methodDescriptorBulkGetProfileMaster,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/login.ProfileMaster/BulkGetProfileMaster',
    request,
    metadata || {},
    this.methodDescriptorBulkGetProfileMaster);
  }

  methodDescriptorDeleteProfileMaster = new grpcWeb.MethodDescriptor(
    '/login.ProfileMaster/DeleteProfileMaster',
    grpcWeb.MethodType.UNARY,
    profile$master_pb.DeleteProfileMasterRequest,
    profile$master_pb.DeleteProfileMasterResponse,
    (request: profile$master_pb.DeleteProfileMasterRequest) => {
      return request.serializeBinary();
    },
    profile$master_pb.DeleteProfileMasterResponse.deserializeBinary
  );

  deleteProfileMaster(
    request: profile$master_pb.DeleteProfileMasterRequest,
    metadata?: grpcWeb.Metadata | null): Promise<profile$master_pb.DeleteProfileMasterResponse>;

  deleteProfileMaster(
    request: profile$master_pb.DeleteProfileMasterRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: profile$master_pb.DeleteProfileMasterResponse) => void): grpcWeb.ClientReadableStream<profile$master_pb.DeleteProfileMasterResponse>;

  deleteProfileMaster(
    request: profile$master_pb.DeleteProfileMasterRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: profile$master_pb.DeleteProfileMasterResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/login.ProfileMaster/DeleteProfileMaster',
        request,
        metadata || {},
        this.methodDescriptorDeleteProfileMaster,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/login.ProfileMaster/DeleteProfileMaster',
    request,
    metadata || {},
    this.methodDescriptorDeleteProfileMaster);
  }

  methodDescriptorAddProfileMaster = new grpcWeb.MethodDescriptor(
    '/login.ProfileMaster/AddProfileMaster',
    grpcWeb.MethodType.UNARY,
    profile$master_pb.AddProfileMasterRequest,
    profile$master_pb.ProfileMasterProto,
    (request: profile$master_pb.AddProfileMasterRequest) => {
      return request.serializeBinary();
    },
    profile$master_pb.ProfileMasterProto.deserializeBinary
  );

  addProfileMaster(
    request: profile$master_pb.AddProfileMasterRequest,
    metadata?: grpcWeb.Metadata | null): Promise<profile$master_pb.ProfileMasterProto>;

  addProfileMaster(
    request: profile$master_pb.AddProfileMasterRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: profile$master_pb.ProfileMasterProto) => void): grpcWeb.ClientReadableStream<profile$master_pb.ProfileMasterProto>;

  addProfileMaster(
    request: profile$master_pb.AddProfileMasterRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: profile$master_pb.ProfileMasterProto) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/login.ProfileMaster/AddProfileMaster',
        request,
        metadata || {},
        this.methodDescriptorAddProfileMaster,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/login.ProfileMaster/AddProfileMaster',
    request,
    metadata || {},
    this.methodDescriptorAddProfileMaster);
  }

  methodDescriptorUpdateProfileMaster = new grpcWeb.MethodDescriptor(
    '/login.ProfileMaster/UpdateProfileMaster',
    grpcWeb.MethodType.UNARY,
    profile$master_pb.ProfileMasterProto,
    profile$master_pb.ProfileMasterProto,
    (request: profile$master_pb.ProfileMasterProto) => {
      return request.serializeBinary();
    },
    profile$master_pb.ProfileMasterProto.deserializeBinary
  );

  updateProfileMaster(
    request: profile$master_pb.ProfileMasterProto,
    metadata?: grpcWeb.Metadata | null): Promise<profile$master_pb.ProfileMasterProto>;

  updateProfileMaster(
    request: profile$master_pb.ProfileMasterProto,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: profile$master_pb.ProfileMasterProto) => void): grpcWeb.ClientReadableStream<profile$master_pb.ProfileMasterProto>;

  updateProfileMaster(
    request: profile$master_pb.ProfileMasterProto,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: profile$master_pb.ProfileMasterProto) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/login.ProfileMaster/UpdateProfileMaster',
        request,
        metadata || {},
        this.methodDescriptorUpdateProfileMaster,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/login.ProfileMaster/UpdateProfileMaster',
    request,
    metadata || {},
    this.methodDescriptorUpdateProfileMaster);
  }

}

